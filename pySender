#!/usr/bin/python

import time, logging, os, sys, subprocess, select
from pygelf import GelfTcpHandler, GelfUdpHandler, GelfTlsHandler

check_port = "/usr/lib/nagios/plugins/check_tcp -H 192.168.1.100 -p 12202"
ip_address = os.popen('hostname -i').read()
hostname = os.popen('hostname').read()
Fail2Connect = 0
filename = "/var/log/syslog"
follow = subprocess.Popen(['tail','-F',filename],stdout = subprocess.PIPE, stderr = subprocess.PIPE)
polling = select.poll()

polling.register(follow.stdout)

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger()
logger.addHandler(GelfTcpHandler(host='192.168.1.100', port=12202, _app_name='%s' % filename.split('/')[3], _ip_address=ip_address, _hostname=hostname, compress=False))
#logger.addHandler(GelfUdpHandler(host='192.168.1.100', port=12201, _app_name='syslog', debug=True, _ip_address='192.168.1.120', chunk_size=1350))


while True:
	if "OK" in os.popen(check_port).read() and Fail2Connect < 5:
		if polling.poll(0.1):
			message = "%s - %s" % (filename.split('/')[3], follow.stdout.readline())
			logging.info(message)
		time.sleep(0.1)
	elif "OK" not in os.popen(check_port).read() and Fail2Connect < 5:
		Fail2Connect += 1
	elif Fail2Connect == 5:
		print "Unable to connect to GrayLog"
		break
if Fail2Connect == 5:
	print "Tried to restablish connection %s times every 0.1 secs, Closing Down" % Fail2Connect
	os.popen("echo \"Application stopped, not sending messages to GrayLog\"|mail -s \"Not sending %s messages to GrayLog from %s\" some-email@someplace.something" % (filename.split('/')[3]), hostname)
	sys.exit(1)
