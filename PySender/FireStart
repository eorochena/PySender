#!/usr/bin/python

import subprocess, os, datetime, time, sys

senders = ['syslog', 'auth', 'graylog-collector']
emptiness = os.devnull
empty_file = open(emptiness, 'w')
subprocess.Popen('./check_connection')

# Application log
LogFile = "/var/log/PySender/FireStart.log"
hoy = datetime.datetime.strftime(datetime.datetime.now(), '%Y-%m-%d %H:%M:%S')
if os.path.isdir("/var/log/PySender") == False:
	subprocess.call('mkdir /var/log/PySender', shell=True)


def connection_alive():
	is_up = os.popen('ps ax|grep check_connection|grep -v grep|wc -l').read()[0]
	if int(is_up) == 1:
		return True
	elif int(is_up) > 1 or int(is_up) < 1:
		log_file = open(LogFile, 'a')
		log_file.write(hoy + ' connection from starter - %s\n' % is_up)
		log_file.close()
		return False
	else:
		return False

def processes_alive():
	process_up = os.popen('ps ax|grep PySender_|egrep -v "grep"|wc -l').read()[0]
	if int(process_up) == int(3):
		log_file = open(LogFile, 'a')
		log_file.write(hoy + ' - process good from starter - %s\n' % process_up)
		log_file.close()
		return True
	elif int(process_up) > int(3) or int(process_up) < int(3):
		log_file = open(LogFile, 'a')
		log_file.write(hoy + ' - process from starter - %s\n' % process_up)
		log_file.close()
		return False
time.sleep(1)
if connection_alive() == True:
	for i in senders:
		subprocess.Popen('./PySender_'+i, stdout=empty_file, stderr=empty_file)
elif connection_alive() == False:
	os.popen("ps ax|grep PySender_|awk '{print $1}'|xargs kill -9")
	log_file = open(LogFile, 'a')
	log_file.write(hoy + ' - Unable to establish initial connection with GrayLog\n')
	log_file.close()
	sys.exit(1)
	

Fail2Connect = 0

while Fail2Connect < 5:
	if connection_alive() == True and processes_alive() == True and Fail2Connect < 5:
		continue
	elif connection_alive() == False and processes_alive() == True and Fail2Connect < 5:
		Fail2Connect += 1
		subprocess.Popen('./check_connection')
		time.sleep(1)
		if connection_alive() == True and processes_alive() == True and Fail2Connect <= 4:
			Fail2Connect = 0
		else:
			Fail2Connect += 1
	elif connection_alive() == True and processes_alive() == False and Fail2Connect < 5:
		os.popen("ps ax|grep PySender_|awk '{print $1}'|xargs kill -9")
		for i in senders:
			subprocess.Popen('./PySender_'+i, stdout=empty_file, stderr=empty_file)
	elif connection_alive() == False and processes_alive() == False and Fail2Connect < 5:
		subprocess.Popen('./check_connection')
		time.sleep(1)
		if connection_alive() == True:
			Fail2Connect = 0
		else:
			Fail2Connect += 1
	elif Fail2Connect == 5:
        	log_file = open(LogFile, 'a')
		log_file.write("%s - Unable to connect to GrayLog\n" % hoy)
		log_file.close()
                break

try:
        if Fail2Connect >= 5:
		os.popen("ps ax|grep PySender_|awk '{print $1}'|xargs kill -9")
                print "%s - Tried to restablish connection %s times - Closing Down :(" % (hoy, Fail2Connect)
        	log_file = open(LogFile, 'a')
        	log_file.write("%s - Tried to restablish connection %s times - Closing Down :(\n" % hoy)
        	sys.exit(1)
except (KeyboardInterrupt, SystemExit):
	os.popen("ps ax|grep PySender_|awk '{print $1}'|xargs kill -9")
        log_file = open(LogFile, 'a')
        log_file.write("%s - Closed by SystemExit\n" % hoy)
        sys.exit(1)
except Exception,e:
	os.popen("ps ax|grep PySender_|awk '{print $1}'|xargs kill -9")
        log_file = open(LogFile, 'a')
        log_file.write(hoy + ' - other - ' + str(e) + '\n')
        log_file.close()
        sys.exit(1)
