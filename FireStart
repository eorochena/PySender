#!/usr/bin/python

import subprocess
import os
import datetime
import time
import sys
import socket
import sender

graylog_input_port = int(sender.graylog_input_port())
graylog_lb_port = int(sender.load_balancer_port())

## Application log
logging_file = "/var/log/pysender/firestart.log"
if os.path.isdir('/var/log/pysender') == False:
    subprocess.call('mkdir /var/log/pysender', shell=True)

emptiness = os.devnull
empty_file = open(emptiness, 'w')
ip_address = socket.gethostbyname(socket.gethostname())
hostname = socket.gethostname()

# Establish initial connection to GrayLog
subprocess.Popen('/home/eorochena/GitHub/PySender/check_connection')


def connection_alive():
    is_up = os.popen("ps ax|grep check_connection|egrep -v 'grep|defunct'|wc -l").read()[0]
    if int(is_up) == 1:
        return True
    elif int(is_up) < 1 or int(is_up) > 1:
        return False
    else:
        return False

def GraylogStatus():
    is_up = os.popen('%s/Graylog_Status' % sender.file_location()).read()
    if 'Alive' in is_up:
        return True
    else:
        today_date = datetime.datetime.strftime(datetime.datetime.now(), '%Y-%m-%d %H:%M:%S')
        log_it = open(logging_file, 'a+')
        log_it.write(today_date + ' - dead - %s\n' % is_up)
        log_it.close()
        return False

def processes_alive(process_status):
    process_up = os.popen("ps ax|grep %s|egrep -v 'grep|<defunct>|vim|less|tail|ps'|awk '{print $6}'" % process_status).read().replace('\n', ' ').split()
    process_up_result = os.popen(
        "ps ax|grep %s|egrep -v 'grep|<defunct>|vim|less|tail|ps'|awk '{print $6}'" % process_status).read()
    if len(process_up) == 1:
        if process_status == process_up[0].split('/')[-1]:
            return True
        else:
            today_date = datetime.datetime.strftime(datetime.datetime.now(), '%Y-%m-%d %H:%M:%S')
            log_it = open(logging_file, 'a+')
            log_it.write(today_date + ' - dead - %s - %s\n' % (process_up, process_up_result))
            log_it.close()
            return False
    elif len(process_up) > 1:
        today_date = datetime.datetime.strftime(datetime.datetime.now(), '%Y-%m-%d %H:%M:%S')
        log_it = open(logging_file, 'a+')
        log_it.write(today_date + ' - dead - %s - %s\n' % (process_up, process_up_result))
        log_it.close()
        return False
    elif len(process_up) < 1:
        today_date = datetime.datetime.strftime(datetime.datetime.now(), '%Y-%m-%d %H:%M:%S')
        log_it = open(logging_file, 'a+')
        log_it.write(today_date + ' - dead - %s - %s\n' % (process_up, process_up_result))
        log_it.close()
        return False

if connection_alive() == True and GraylogStatus() == True:
    subprocess.Popen('%s/PySender.py' % sender.file_location(), stdout=empty_file, stderr=empty_file, shell = True)
elif connection_alive() == False or GraylogStatus() == False:
    today_date = datetime.datetime.strftime(datetime.datetime.now(), '%Y-%m-%d %H:%M:%S')
    print('%s - Tried to establish initial connection on port %s and port %s but failed - Closing Down :(\n' % (today_date, graylog_input_port, graylog_lb_port))
    log_it = open(logging_file, 'a+')
    log_it.write('%s - Tried to establish initial connection on port %s and port %s but failed - Closing Down :(\n' % (today_date, graylog_input_port, graylog_lb_port))
    log_it.close()
    subprocess.call("ps ax|grep check_connection|awk '{print $1}'|xargs kill -9", stderr=empty_file, stdout=empty_file, shell=True)
    subprocess.call("ps ax|grep PySender_|grep -v grep|awk '{print $1}'|xargs kill -9", stderr=empty_file, stdout=empty_file, shell=True)
    subprocess.call("ps ax|grep 'tail -F'|grep -v grep|awk '{print $1}'|xargs kill -9", stderr=empty_file, stdout=empty_file, shell=True)
    subprocess.call("ps ax|grep 'Graylog_Status'|grep -v grep|awk '{print $1}'|xargs kill -9", stderr=empty_file, stdout=empty_file, shell=True)
    sys.exit(1)


Fail2Connect = 0
BadGraylog = 0

while Fail2Connect < 7 or BadGraylog < 7:
    process_status = '%s/PySender.py' % sender.file_location()
    if connection_alive() == True and processes_alive(process_status) == True and GraylogStatus() == True:
        continue
    elif connection_alive() == False and processes_alive(process_status) == True and GraylogStatus() == True and Fail2Connect <= 6:
        Fail2Connect += 1
        subprocess.Popen('/home/eorochena/GitHub/PySender/check_connection', stderr=empty_file, stdout=empty_file, shell=True)
        time.sleep(1)
        if connection_alive() == True and processes_alive(process_status) == True and GraylogStatus() == True and Fail2Connect <= 6:
            hoy = datetime.datetime.strftime(datetime.datetime.now(), '%Y-%m-%d %H:%M:%S')
            log_it = open(LogFile, 'a+')
            log_it.write("%s - is alive %s\n" % (hoy, process_status))
            log_it.close()
            Fail2Connect = 0
        else:
            Fail2Connect += 1
    elif connection_alive() == True and processes_alive(process_status) == True and GraylogStatus() == False and BadGraylog <= 6:
        BadGraylog += 1
        subprocess.Popen('%s/Graylog_Status' % sender.file_location(), shell=True)
        if connection_alive() == True and processes_alive(process_status) == True and GraylogStatus() == True and BadGraylog <= 6:
            BadGraylog = 0
        else:
            BadGraylog += 1
    elif connection_alive() == True and processes_alive(process_status) == False and GraylogStatus() == True:
        today_date = datetime.datetime.strftime(datetime.datetime.now(), '%Y-%m-%d %H:%M:%S')
        log_it = open(logging_file, 'a+')
        log_it.write("%s - Restarting %s and killing it if was running in funky state\n" % (today_date, process_status))
        log_it.close()
        subprocess.call("ps ax|grep %s|egrep -v 'grep|defunct'|awk '{print $1}'|xargs kill -9" % process_status, stderr=empty_file, stdout=empty_file, shell=True)
        subprocess.call("ps ax|grep 'tail -F'|grep %s|grep -v grep|awk '{print $1}'|xargs kill -9" % process_status.replace('PySender_', ''), stderr=empty_file, stdout=empty_file, shell=True)
        subprocess.Popen('/home/eorochena/GitHub/PySender/' + process_status, stdout=empty_file, stderr=empty_file, shell=True)
    elif connection_alive() == False and processes_alive(process_status) == False and GraylogStatus() == False:
        subprocess.Popen('/home/eorochena/GitHub/PySender/check_connection')
        subprocess.Popen('/home/eorochena/GitHub/PySender/Graylog_Status')
        time.sleep(3)
        if connection_alive() == True and GraylogStatus() == True:
            Fail2Connect = 0
            BadGraylog = 0
        else:
            BadGraylog += 1
            Fail2Connect += 1
    elif Fail2Connect >= 7 or BadGraylog >= 7:
        hoy = datetime.datetime.strftime(datetime.datetime.now(), '%Y-%m-%d %H:%M:%S')
        log_file = open(LogFile, 'a+')
        log_file.write("%s - Unable to connect to GrayLog\n" % hoy)
        log_file.close()
        break

try:
    if Fail2Connect >= 7 or BadGraylog >= 7:
        hoy = datetime.datetime.strftime(datetime.datetime.now(), '%Y-%m-%d %H:%M:%S')
        subprocess.call("ps ax|grep check_connection|awk '{print $1}'|xargs kill -9", stderr=empty_file, stdout=empty_file, shell=True)
        subprocess.call("ps ax|grep PySender_|grep -v grep|awk '{print $1}'|xargs kill -9", stderr=empty_file, stdout=empty_file, shell=True)
        subprocess.call("ps ax|grep 'tail -F'|grep -v grep|awk '{print $1}'|xargs kill -9", stderr=empty_file, stdout=empty_file, shell=True)
        subprocess.call("ps ax|grep 'GraylogStatus'|grep -v grep|awk '{print $1}'|xargs kill -9", stderr=empty_file, stdout=empty_file, shell=True)
        print "%s - Tried to restablish connection %s times on port %s and %s times on port %s - Closing Down :(" % (hoy, Fail2Connect, port, BadGraylog, lb_port)
        log_file = open(LogFile, 'a+')
        log_file.write('%s - Tried to restablish connection %s times on port %s and %s times on port %s - Closing Down :(\n' % (hoy, Fail2Connect, port, BadGraylog, lb_port))
        log_file.close()
        sys.exit(1)
except Exception,e:
    hoy = datetime.datetime.strftime(datetime.datetime.now(), '%Y-%m-%d %H:%M:%S')
    subprocess.call("ps ax|grep check_connection|awk '{print $1}'|xargs kill -9", stderr=empty_file, stdout=empty_file, shell=True)
    subprocess.call("ps ax|grep PySender_|awk '{print $1}'|xargs kill -9", stderr=empty_file, stdout=empty_file, shell=True)
    subprocess.call("ps ax|grep 'tail -F'|awk '{print $1}'|xargs kill -9", stderr=empty_file, stdout=empty_file, shell=True)
    subprocess.call("ps ax|grep 'GraylogStatus'|grep -v grep|awk '{print $1}'|xargs kill -9", stderr=empty_file, stdout=empty_file, shell=True)
    log_file = open(LogFile, 'a+')
    log_file.write(hoy + ' - other - ' + str(e) + '\n')
    log_file.close()
    sys.exit(1)

