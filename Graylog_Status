#!/usr/bin/python

import requests
import sys
import json
import sender

graylog_server = sender.graylog_server()
load_balancer_port = sender.load_balancer_port()
servers = []
results = []
journal_capacity = []

LogFile = "/var/log/PySender/FireStart.log"

try:
        response = requests.get('http://%s:%s/system/lbstatus' % (graylog_server, load_balancer_port), timeout = 7, headers={'Connection':'close'})
        if response.content == 'ALIVE':
                try:
                        response = requests.get('http://%s:%s/cluster' % (graylog_server, load_balancer_port), timeout = 7, headers={'Connection':'close'}, auth = ('root', 'ch@ng3m3'))
                        val = json.loads(response.content)
                        for i in val:
                                servers.append(i)
                        for i in range(len(servers)):
                                if val[servers[i]]['is_processing'] == True:
                                        results.append('True')
                                        continue
                                elif val[servers[i]]['is_processing'] == False:
                                        results.append('False')
                                        continue
                        if 'False' in results:
                                print ' - GrayLog not processing '
                                sys.exit(1)
                        else:
                                for i in range(len(servers)):
					try:
                                        	response = requests.get('http://%s:%s/cluster/%s/journal' % (graylog_server, load_balancer_port, servers[i]), timeout = 7, headers = {'Connection':'close'}, auth = ('root', 'ch@ng3m3'))
                                        	journal_status = json.loads(response.content)
                                        	if (float(journal_status['journal_size'])/float(journal_status['journal_size_limit']))*100 >= 75:
                                                	journal_capacity.append("BAD")
                                        	elif (float(journal_status['journal_size'])/float(journal_status['journal_size_limit']))*100 <= 74:
                                                	journal_capacity.append("GOOD")
					except Exception as e:
						print ' - unable to get journal status - ', e.message
						sys.exit(1)
                                if 'BAD' in journal_capacity:
                                        print ' - journal capacity = ', (float(journal_status['journal_size'])/float(journal_status['journal_size_limit']))*100
                                        sys.exit(1)
                                else:
                                        print "Alive"
                                        sys.exit(0)
                except Exception as e:
                        print ' - unable to get response from GrayLog - ', e.message
                        sys.exit(1)
        else:
                print ' - Bad response from GrayLog - ', response.content, ' ', response.status_code
                sys.exit(1)
except Exception as e:
        print ' - unable to get any response from GrayLog - ', e.message
        sys.exit(1)

